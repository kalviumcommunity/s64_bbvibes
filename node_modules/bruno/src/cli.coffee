
argumentum = require 'argumentum'
fs = require 'fs'
sysPath = require 'path'
commands = {}
#commands = require './commands'
#helpers = require './helpers'
logger = require './logger'

# Reads package.json and extracts brunch version from there.
# Returns string.
exports.readPackageVersion = readPackageVersion = ->
  content = fs.readFileSync sysPath.join __dirname, '..', 'package.json'
  (JSON.parse content).version


# Config for [argumentum](https://github.com/paulmillr/argumentum).
commandLineConfig =
  script: 'bruno'
  commandRequired: yes
  commands:
    new:
      abbr: 'n'
      help: 'Create new bruno project'
      options:
        rootPath:
          position: 1
          help: 'root path of project'
          metavar: 'ROOT_PATH'
          required: yes
        skeleton:
          abbr: 's'
          help: 'path to / git URL of application skeleton (template).'
      callback: commands.new

    start:
      abbr: 's'
      help: 'Starts the bruno server'
      options:
        configPath:
          abbr: 'c'
          help: 'path to config file'
          metavar: 'CONFIG'
          full: 'config'
        minify:
          abbr: 'm'
          flag: yes
          help: 'minify result scripts / styles'
        port:
          abbr: 'p'
          help: 'which port the server will listen on'
          metavar: 'PORT'
      callback: commands.start

    options:
      version:
        abbr: 'v'
        help: 'display brunch version'
        flag: yes
        callback: readPackageVersion


# The function would be executed every time user run `bin/bruno`.
exports.run = ->
  argumentum.load(commandLineConfig).parse()